- args:
    cascade: false
    read_only: false
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    cascade: false
    read_only: false
    sql: "CREATE TABLE \"public\".\"experience\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"office_id\" uuid NOT NULL, \"started_at\" date NOT NULL DEFAULT now(), \"company_policy\"
      text, \"own_experience\" text, \"other_tools\" text, \"created_at\" timestamptz
      NOT NULL DEFAULT now(), \"updated_at\" timestamptz NOT NULL DEFAULT now(), PRIMARY
      KEY (\"id\") , FOREIGN KEY (\"office_id\") REFERENCES \"public\".\"office\"(\"id\")
      ON UPDATE cascade ON DELETE no action, UNIQUE (\"id\"));\nCREATE OR REPLACE
      FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS TRIGGER
      AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_experience_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"experience\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_experience_updated_at\" ON \"public\".\"experience\"
      \nIS 'trigger to set value of column \"updated_at\" to current timestamp on
      row update';"
  type: run_sql
- args:
    name: experience
    schema: public
  type: add_existing_table_or_view
