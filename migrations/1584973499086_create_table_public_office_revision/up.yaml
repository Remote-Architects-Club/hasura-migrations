- args:
    cascade: false
    read_only: false
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    cascade: false
    read_only: false
    sql: "CREATE TABLE \"public\".\"office_revision\"(\"id\" uuid NOT NULL DEFAULT
      gen_random_uuid(), \"created_at\" timestamptz NOT NULL DEFAULT now(), \"updated_at\"
      timestamptz NOT NULL DEFAULT now(), \"office_id\" uuid NOT NULL, \"remote_policy\"
      text, \"remote_since\" date, \"user_id\" text NOT NULL, PRIMARY KEY (\"id\")
      , FOREIGN KEY (\"id\") REFERENCES \"public\".\"office\"(\"id\") ON UPDATE cascade
      ON DELETE cascade); COMMENT ON TABLE \"public\".\"office_revision\" IS E'Holds
      revision history for each office save.';\nCREATE OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_office_revision_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"office_revision\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_office_revision_updated_at\" ON \"public\".\"office_revision\"
      \nIS 'trigger to set value of column \"updated_at\" to current timestamp on
      row update';"
  type: run_sql
- args:
    name: office_revision
    schema: public
  type: add_existing_table_or_view
